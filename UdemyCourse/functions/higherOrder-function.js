/*

  Principais tipos de fun√ß√µes no Javascript

  1 ‚Ä¢ Forma literal
  2 ‚Ä¢ Armazenar em uma variavel
  3 ‚Ä¢ Armazenar em um array
  4 ‚Ä¢ Armazenar em um atributo de objeto
  5 ‚Ä¢ Passar fun√ß√£o como par√¢metro
  6 ‚Ä¢ Uma fun√ß√£o pode retornar/conter uma fun√ß√£o

  üìù Higher Order Functions

  Fun√ß√µes de ordem superior em JavaScript s√£o aquelas que podem receber e/ou retornar outras fun√ß√µes. 
  Essas fun√ß√µes s√£o muito usadas em opera√ß√µes com arrays, como map, filter e reduce, proporcionando maior 
  flexibilidade e abstra√ß√£o no c√≥digo. Ao utilizar fun√ß√µes de ordem superior em JavaScript, os desenvolvedores 
  podem escrever c√≥digo mais elegante e eficiente para resolver problemas complexos.

*/

// 1
function soma(a, b) {
  return a + b
}

// 2
const divisao = function(a, b) {return a * b}

// 3
let array = [soma, divisao]
console.log(array[0](1,2))

// 4
const objeto = {
  falar: function(frase){
    return frase
  }
}
console.log(objeto.falar('Salve'))

// 5
function children(func) {
  func()
}
children(function() { return 'Children'})

// 6
function jsLover(param1, param2) {
  return function(param3) {
    console.log('JS <3')
  }
}
const func = jsLover(1, 2)

func(3)
